# -*- coding: utf-8 -*-
"""ödev

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ojkWXs_G4tJIahXTdKLQ_jkv8D5-zhu8

ÖDEV 1
"""

class Film_Kutuphanesi:
 def __init__(self, ad, yonetmen, yil, tur):
      self.ad = ad
      self.yonetmen = yonetmen
      self.yil = yil
      self.tur = tur
 def __str__(self):
  return f"{self.ad} - {self.yonetmen} - {self.yil} - {self.tur}"

class FilmYoneticisi:
 def __init__(self):
    self.filmler = []

 def film_ekle(self,ad,yonetmen,yil,tur):
    yeni_film = Film(ad,yonetmen,yil,tur)
    self.filmler.append(yeni_film)
    print(f"'{ad}'filmi eklendi.")

 def fil_sil(self,ad):
  for film in self.filmler:
    if film.ad == ad:
      self.filmler.remove(film)
      print(f"'{ad}'filmi silindi.")
      return
      print(f"'{ad}'filim bulunamadı")

  def filmleri_listele(self,filtre=None,deger=None):
    if filtre == "tur":
     liste=[film for film in self.filmler if film.yil==deger]
    else:
      liste=self.filmler
    if liste:
      for film in liste:
        print(film)

    else:
      print("Film bulunamadı")
      #kulanım
      if __name__ == "__main__" :
          yonetici = FilmYoneticisi()
      # film ekleme
          yonetici.film_ekle("Alacakaranlık"," Catherine Hardwicke", 2008,"Fantastik")
          yonetici.film_ekle("The Avengers","Joss Whedon",2012,"Bilim kurgu")
          yonetici.film_ekle("Narnia Günlükleri"," Andrew Adamson",2005, "Macera")

      # Filmleri listeleme
      print("tüm filmler:")
      yonetici.filmleri_listele()
      # Tür bazında listeleme
      print("'macera'türündeki filmler:")
      yonetici.filmleri_listele(liste="tur",deger="macera")
      # Yıla göre Filmler
      print("2008 yılındaki filmler:")
      yonetici.filmleri_listele(liste="yil",deger=2008)
      # Film silme
      yonetici.fil_sil("Alacakaranlık")
      #güncel liste
      print("Güncel film listesi:")
      yonetici.filmleri_listele()

"""ÖDEV 2
KÜTÜPHANE

"""

class kitap:
  def __init__(self, ad, yazar):
    self.ad = ad
    self.yazar = yazar
    self.oduc_alindi = False

  def __str__(self):
    odunc_durumu = "odunc verildi"
    if self.oduc_alindi:
      odunc_durumu = "odunc alındı"
    return f"{self.ad} - {self.yazar} - {odunc_durumu}"

  class kütüphane:
    def __init__(self):
      self.kitaplar = []
      self.odunc_verilen_kitaplar = []

    def kitap_ekle(self,ad,yazar):
      yeni_kitap = kitap(ad,yazar)
      self.kitaplar.append(yeni_kitap)
      print(f"'{ad}'kitap kütüpahneye eklendi.")

    def kitapları_listele(self):
      print("Kütüphanedeki kitaplar:")
      for kitap in self.kitaplar:
        print(kitap)

    def odunc_ver(self, kitap_adi):
      for kitap in self.kitaplar:
        if kitap.ad == kitap_adi and not kitap.odunc_alindi:
          kitap.odunc_alindi = True
          self.odunc_verilen_kitaplar.append(kitap)
          print(f"'{kitap_adi}'kitap odunc verildi.")
          return
          PRİNT(f"'{kitap_adi}'kitap bulunamadı veya zaten odunc alındı.")

    def geri_al(self,kitap_adi):
      for kitap in self.odunc_verilen_kitaplar:
        if kitap.ad == kitap_adi:
          kitap.oduc_alindi = False
          self.odunc_verilen_kitaplar.remove(kitap)
          print(f"'{kitap_adi}'kitap geri alındı.")
          return
          print(f"'{kitap_adi}'kitap bulunamadı veya zaten geri alınmış.")
    def odunc_verilenleri_listele(self):
      print("ödünç verilen kitaplar")
      if not self.odunc_verilen_kitaplar:
        print("hiç ödünç verilen kitap yok")
      else:
        for kitap in self.odunc_verilen_kitaplar:
          print(kitap)


#test
kutuphane = kütüphane()
kutuphane.kitap_ekle("1984","George Orwell")
kutuphane.kitap_ekle("Sefiller","Victor Hugo")

kutuphane.kitapları_listele()
kutuphane.odunc_ver("1984")
kutuphane.odunc_verilenleri_listele()

kutuphane.geri_al("1984")
kutuphane.odunc_verilenleri_listele()